name: Test API and MLFlow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    # Check out the repository
    - name: Checkout code
      uses: actions/checkout@v2
    
    # Set up Python environment
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    # Install dependencies
    - name: Clean environment and install dependencies
      run: |
        rm -rf .venv  # Nettoyage de l'environnement virtuel
        python -m venv .venv  # Création d'un nouvel environnement virtuel
        source .venv/bin/activate  # Activation de l'environnement virtuel
        pip install --upgrade pip
        pip install -r requirements.txt  # Installation des dépendances du projet

    # Start MLFlow server
    - name: Start MLFlow server
      run: |
        nohup mlflow server --host 0.0.0.0 --port 5001 > mlflow_logs.txt 2>&1 &  # Démarrer MLFlow
        echo "Waiting for MLFlow to be ready..."
        until curl -s http://127.0.0.1:5001; do echo "Waiting for MLFlow..."; sleep 2; done  # Attendre que MLFlow soit prêt

    # Start FastAPI server
    - name: Start API server
      run: |
        nohup uvicorn API:app --host 0.0.0.0 --port 8080 > api_logs.txt 2>&1 &  # Démarrer l'API FastAPI
        echo "Waiting for API to be ready..."
        until curl -s http://127.0.0.1:8080/predict/; do echo "Waiting for API..."; sleep 2; done  # Attendre que l'API soit prête

    # Display MLFlow logs for debugging
    - name: Display MLFlow logs
      run: cat mlflow_logs.txt || echo "Le fichier mlflow_logs.txt n'existe pas."

    # Display API logs for debugging
    - name: Display API logs
      run: cat api_logs.txt || echo "Le fichier api_logs.txt n'existe pas."

    # Run tests with pytest
    - name: Run tests
      run: |
        source .venv/bin/activate  # Activer l'environnement virtuel
        pytest --maxfail=1 --disable-warnings -v  # Exécuter les tests en mode verbeux

    # Clean up job
    - name: Clean up after tests
      run: |
        kill $(lsof -t -i:5001)  # Arrêter le serveur MLFlow
        kill $(lsof -t -i:8080)  # Arrêter le serveur FastAPI
