name: Run API Server, Test Prediction, and Deploy Docker Image to Azure

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"] # Tester sur 3 versions de Python
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Git LFS
      run: |
        curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
        sudo apt-get install git-lfs
        git lfs install

    - name: Restore LFS Cache
      id: restore-cache
      uses: actions/cache@v3
      with:
        path: ./fine_tuned_roberta
        key: lfs-model-cache-${{ runner.os }}-${{ matrix.python-version }}
        restore-keys: |
          lfs-model-cache-${{ runner.os }}-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

  test-api:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"] # Tester sur 3 versions de Python
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Start API server
      run: |
        echo "Starting API server..."
        uvicorn API:app --host 0.0.0.0 --port 5000 --log-level debug > api_logs.txt 2>&1 &
        echo "Waiting for API to be ready..."
        for i in {1..30}; do
          curl -s http://127.0.0.1:5000/predict/ -o /dev/null && break || sleep 1
        done
        echo "API is ready"

    - name: Run Unit Tests
      run: |
        echo "Running unit tests on Python ${{ matrix.python-version }}..."
        pytest test_api.py --maxfail=1 --disable-warnings -q

    - name: Display API logs
      run: |
        echo "Displaying API logs:"
        cat api_logs.txt

  build-docker:
    runs-on: ubuntu-latest
    needs: test-api
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/twit_sentiments:latest .

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image to DockerHub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/twit_sentiments:latest

  deploy-azure:
    runs-on: ubuntu-latest
    needs: build-docker
    steps:
    - name: Deploy Docker image to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: twisentiment-v2  # Nom de l'application Web Azure
        images: ${{ secrets.DOCKER_USERNAME }}/twit_sentiments:latest
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
