name: Python application

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 autopep8 black  # Installe les dépendances nécessaires pour flake8, autopep8 et black
      - run: |
          autopep8 --in-place --aggressive $(find . -name "*.py")  # Formate uniquement les fichiers Python
      - run: |
          black $(find . -name "*.py")  # Formate uniquement les fichiers Python avec black
      - run: |
          flake8 . || exit 1  # Exécuter flake8 et échouer si des erreurs sont détectées
      - name: Lancer l'API et vérifier sa disponibilité
        run: |
          nohup python API.py > api_logs.txt 2>&1 &  # Lancer l'API en arrière-plan et rediriger les logs
          echo "API lancée, en attente de sa disponibilité..."
          for i in {1..20}; do  # Essayer pendant 20 secondes
            sleep 1  # Attendre 1 seconde entre chaque tentative
            curl -s http://127.0.0.1:5001 || echo "API non encore disponible, tentative $i"
          done
      - run: |
          pytest test_api.py  # Exécute les tests unitaires du fichier test_api.py
