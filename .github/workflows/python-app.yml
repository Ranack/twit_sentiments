name: Python application

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Récupération du code
      - name: Checkout code
        uses: actions/checkout@v4

      # Étape 2 : Configuration de Python
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      # Étape 3 : Installation des dépendances
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install tensorflow-cpu

      # Étape 4 : Validation des fichiers du modèle
      - name: Validate model files
        run: |
          echo "Vérification des fichiers nécessaires..."
          ls -lh ./fine_tuned_roberta
          required_files=("config.json" "tf_model.h5" "tokenizer_config.json" "vocab.json" "merges.txt" "special_tokens_map.json")
          for file in "${required_files[@]}"; do
            if [ ! -f "./fine_tuned_roberta/$file" ]; then
              echo "Erreur : fichier manquant $file"
              exit 1
            fi
          done
          echo "Tous les fichiers modèles sont présents."

      # Étape 5 : Lancer l'API
      - name: Launch API
        run: |
          nohup python API.py > api_logs.txt 2>&1 &
          echo "API lancée, en attente de sa disponibilité..."
          for i in {1..60}; do
            if curl -s http://127.0.0.1:8080; then
              echo "API disponible !"
              break
            fi
            sleep 1
          done
          if [ $i -eq 60 ]; then
            echo "L'API n'est pas disponible après 60 secondes. Échec."
            exit 1

      # Étape 6 : Affichage des logs en cas d'échec
      - name: Display API logs on failure
        if: failure()
        run: |
          echo "Affichage des logs de l'API en cas d'échec :"
          cat api_logs.txt

      # Étape 7 : Exécuter les tests Pytest
      - name: Run tests
        run: |
          echo "Exécution des tests Pytest..."
          pytest test_api.py --maxfail=3 --disable-warnings

      # Étape 8 : Afficher les logs après les tests
      - name: Display API logs after tests
        if: always()
        run: |
          echo "Affichage des logs complets de l'API :"
          cat api_logs.txt
