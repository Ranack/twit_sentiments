name: Python application

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ ! -f requirements-dev.txt ]; then pip install pytest httpx tf-keras; fi

      - name: Start FastAPI server with logging
        run: |
          uvicorn API:app --host 0.0.0.0 --port 8000 --log-level debug --log-config /dev/stdout &  # Ajout des logs à stdout

      - name: Wait for the server to start
        run: |
          sleep 60  # Attendre 60 secondes pour que le serveur soit prêt

      - name: Test if API is running (with verbose output)
        run: |
          curl -v -X GET http://localhost:8000  # Affiche des détails sur la connexion, même en cas d'erreur

      - name: Display FastAPI logs
        run: |
          ps aux | grep uvicorn  # Affiche les processus en cours, y compris ceux liés à uvicorn
          tail -n 10 /dev/stdout  # Affiche les derniers logs (stdout redirigés)

      - name: Run tests
        run: |
          export IGNORE_MLFLOW=true
          pytest

      - name: Cleanup
        run: |
          rm -rf *.log *.tmp

  docker:
    needs: build
    runs-on: ubuntu-latest
    if: success()

    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-python-app:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/my-python-app:${{ github.sha }}
