name: MLFlow and FastAPI Workflow

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Étape pour installer MLFlow et dépendances
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install mlflow

      # Étape pour lancer le serveur MLFlow
      - name: Launch MLFlow Server
        run: |
          nohup mlflow server --host 0.0.0.0 --port 5001 > mlflow_logs.txt 2>&1 &
          echo "MLFlow server lancé, en attente de sa disponibilité..."
          for i in {1..60}; do
            if curl -s http://127.0.0.1:5001; then
              echo "MLFlow disponible !"
              break
            fi
            sleep 1
          done
          if [ $i -eq 60 ]; then
            echo "MLFlow n'est pas disponible après 60 secondes. Échec."
            exit 1
          fi

      # Étape pour lancer l'API FastAPI
      - name: Launch API
        run: |
          nohup uvicorn API:app --host 0.0.0.0 --port 8080 > api_logs.txt 2>&1 &
          echo "API lancée, en attente de sa disponibilité..."
          for i in {1..60}; do
            if curl -s http://127.0.0.1:8080; then
              echo "API disponible !"
              break
            fi
            sleep 1
          done
          if [ $i -eq 60 ]; then
            echo "L'API n'est pas disponible après 60 secondes. Échec."
            exit 1
          fi

      # Afficher les logs si l'API échoue
      - name: Display logs if API fails
        if: failure()
        run: |
          echo "Erreur lors du démarrage de l'API, affichage des logs..."
          cat api_logs.txt || echo "Le fichier api_logs.txt n'existe pas."

      # Étape finale pour récupérer les logs MLFlow
      - name: Retrieve MLFlow logs
        run: |
          cat mlflow_logs.txt || echo "Le fichier mlflow_logs.txt n'existe pas."
