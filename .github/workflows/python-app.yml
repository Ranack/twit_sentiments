name: Python application

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install tensorflow-cpu

      - name: Inspect model files
        run: |
          echo "Vérification des fichiers du modèle..."
          ls -lh ./fine_tuned_roberta
          for file in ./fine_tuned_roberta/*; do
            echo "Contenu de $file :"
            cat "$file"
          done

      - name: Launch API
        run: |
          nohup python API.py > api_logs.txt 2>&1 &
          echo "API lancée, en attente de sa disponibilité..."
          sleep 10  # Attendre un peu plus longtemps pour que l'API démarre
          for i in {1..60}; do
            if curl -s http://127.0.0.1:8080; then  # Vérifier sur le port 8080
              echo "API disponible !"
              break
            fi
            sleep 1
          done
          if [ $i -eq 60 ]; then
            echo "L'API n'est pas disponible après 60 secondes. Échec."
            exit 1

      - name: Display API logs on failure
        if: failure()
        run: |
          echo "Affichage des logs de l'API en cas d'échec..."
          tail -n 50 api_logs.txt  # Afficher les 50 dernières lignes des logs

      - name: Run tests
        run: |
          echo "Attente avant les tests..."
          sleep 20  # Attendre 20 secondes avant d'exécuter les tests
          pytest test_api.py
